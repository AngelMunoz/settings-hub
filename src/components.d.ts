/**
* This is an autogenerated file created by the Stencil compiler.
* It contains typing information for all components that exist in this project.
*/
/* tslint:disable */

import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  RouterHistory,
} from '@stencil/router';


export namespace Components {

  interface AppRoot {}
  interface AppRootAttributes extends StencilHTMLAttributes {}

  interface TunGoHome {
    'history': RouterHistory;
  }
  interface TunGoHomeAttributes extends StencilHTMLAttributes {
    'history'?: RouterHistory;
  }

  interface TunLoader {}
  interface TunLoaderAttributes extends StencilHTMLAttributes {}

  interface TunSearchBar {
    'placeholder': string;
  }
  interface TunSearchBarAttributes extends StencilHTMLAttributes {
    'onOn-search'?: (event: CustomEvent) => void;
    'placeholder'?: string;
  }

  interface TunSplitView {
    'hasHamburger': boolean;
    'isOpen': boolean;
    'togglePane': () => void;
  }
  interface TunSplitViewAttributes extends StencilHTMLAttributes {
    'hasHamburger'?: boolean;
    'isOpen'?: boolean;
  }

  interface TunTile {}
  interface TunTileAttributes extends StencilHTMLAttributes {}

  interface DevicesPage {
    'history': RouterHistory;
  }
  interface DevicesPageAttributes extends StencilHTMLAttributes {
    'history'?: RouterHistory;
  }

  interface HomePage {
    'history': RouterHistory;
  }
  interface HomePageAttributes extends StencilHTMLAttributes {
    'history'?: RouterHistory;
  }

  interface NotFound {}
  interface NotFoundAttributes extends StencilHTMLAttributes {}

  interface SystemPage {
    'history': RouterHistory;
  }
  interface SystemPageAttributes extends StencilHTMLAttributes {
    'history'?: RouterHistory;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AppRoot': Components.AppRoot;
    'TunGoHome': Components.TunGoHome;
    'TunLoader': Components.TunLoader;
    'TunSearchBar': Components.TunSearchBar;
    'TunSplitView': Components.TunSplitView;
    'TunTile': Components.TunTile;
    'DevicesPage': Components.DevicesPage;
    'HomePage': Components.HomePage;
    'NotFound': Components.NotFound;
    'SystemPage': Components.SystemPage;
  }

  interface StencilIntrinsicElements {
    'app-root': Components.AppRootAttributes;
    'tun-go-home': Components.TunGoHomeAttributes;
    'tun-loader': Components.TunLoaderAttributes;
    'tun-search-bar': Components.TunSearchBarAttributes;
    'tun-split-view': Components.TunSplitViewAttributes;
    'tun-tile': Components.TunTileAttributes;
    'devices-page': Components.DevicesPageAttributes;
    'home-page': Components.HomePageAttributes;
    'not-found': Components.NotFoundAttributes;
    'system-page': Components.SystemPageAttributes;
  }


  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLTunGoHomeElement extends Components.TunGoHome, HTMLStencilElement {}
  var HTMLTunGoHomeElement: {
    prototype: HTMLTunGoHomeElement;
    new (): HTMLTunGoHomeElement;
  };

  interface HTMLTunLoaderElement extends Components.TunLoader, HTMLStencilElement {}
  var HTMLTunLoaderElement: {
    prototype: HTMLTunLoaderElement;
    new (): HTMLTunLoaderElement;
  };

  interface HTMLTunSearchBarElement extends Components.TunSearchBar, HTMLStencilElement {}
  var HTMLTunSearchBarElement: {
    prototype: HTMLTunSearchBarElement;
    new (): HTMLTunSearchBarElement;
  };

  interface HTMLTunSplitViewElement extends Components.TunSplitView, HTMLStencilElement {}
  var HTMLTunSplitViewElement: {
    prototype: HTMLTunSplitViewElement;
    new (): HTMLTunSplitViewElement;
  };

  interface HTMLTunTileElement extends Components.TunTile, HTMLStencilElement {}
  var HTMLTunTileElement: {
    prototype: HTMLTunTileElement;
    new (): HTMLTunTileElement;
  };

  interface HTMLDevicesPageElement extends Components.DevicesPage, HTMLStencilElement {}
  var HTMLDevicesPageElement: {
    prototype: HTMLDevicesPageElement;
    new (): HTMLDevicesPageElement;
  };

  interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {}
  var HTMLHomePageElement: {
    prototype: HTMLHomePageElement;
    new (): HTMLHomePageElement;
  };

  interface HTMLNotFoundElement extends Components.NotFound, HTMLStencilElement {}
  var HTMLNotFoundElement: {
    prototype: HTMLNotFoundElement;
    new (): HTMLNotFoundElement;
  };

  interface HTMLSystemPageElement extends Components.SystemPage, HTMLStencilElement {}
  var HTMLSystemPageElement: {
    prototype: HTMLSystemPageElement;
    new (): HTMLSystemPageElement;
  };

  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement
    'tun-go-home': HTMLTunGoHomeElement
    'tun-loader': HTMLTunLoaderElement
    'tun-search-bar': HTMLTunSearchBarElement
    'tun-split-view': HTMLTunSplitViewElement
    'tun-tile': HTMLTunTileElement
    'devices-page': HTMLDevicesPageElement
    'home-page': HTMLHomePageElement
    'not-found': HTMLNotFoundElement
    'system-page': HTMLSystemPageElement
  }

  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'tun-go-home': HTMLTunGoHomeElement;
    'tun-loader': HTMLTunLoaderElement;
    'tun-search-bar': HTMLTunSearchBarElement;
    'tun-split-view': HTMLTunSplitViewElement;
    'tun-tile': HTMLTunTileElement;
    'devices-page': HTMLDevicesPageElement;
    'home-page': HTMLHomePageElement;
    'not-found': HTMLNotFoundElement;
    'system-page': HTMLSystemPageElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
